{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  class: \"test\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_the_navigation = _resolveComponent(\"the-navigation\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"button\",\n    value: \"ok\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.password && $setup.password(...args))\n  }), _createVNode(_component_the_navigation), _createElementVNode(\"div\", null, [_createVNode(_component_router_view)])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGEA,oBAAkC,OAAlC,EAAkC;EAA3BC,IAAI,EAAC,MAAsB;EAAfC,KAAK,EAAC;AAAS,CAAlC;;AAAA;;;;;;;6DAAAC,YACAH,oBAAoD,OAApD,EAAoD;IAA7CC,IAAI,EAAC,QAAwC;IAA/BG,KAAK,EAAC,IAAyB;IAAnBC,OAAK,yCAAEC,2CAAF;EAAc,CAApD,GACAC,aAAiCC,yBAAjC,GACAR,oBAEM,KAFN,EAEM,IAFN,EAEM,CADJO,aAA2BE,sBAA3B,CACI,CAFN","names":["_createElementVNode","type","class","_hoisted_1","value","onClick","$setup","_createVNode","_component_the_navigation","_component_router_view"],"sourceRoot":"","sources":["/Users/lea/Desktop/portfolio/src/App.vue"],"sourcesContent":["<!-- @format -->\n\n<template>\n  <input type=\"text\" class=\"test\" />\n  <input type=\"button\" value=\"ok\" @click=\"password\" />\n  <the-navigation></the-navigation>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport TheNavigation from \"./components/shared/TheNavigation.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    TheNavigation,\n  },\n\n  setup() {\n    let test = ref(\"\");\n    let somthing = \"ok\";\n\n    const password = () => {\n      // alert(\"but pressed\");\n      if (test.value == somthing.value) {\n        alert(test);\n      } else {\n        alert(\"bye\");\n      }\n    };\n\n    return { password };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}